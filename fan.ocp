(* -*-caml-*- *)


begin program "common"
    sort  = true
    files = [ "common/fAst.mli" "common/oconfig.ml"
                "common/ast2pt.ml" "common/astPrint.ml"
                "common/ast_basic.ml" "common/dyn_array.ml"
                "common/fConfig.ml" "common/fLoc.ml"
                "common/fToken.ml" "common/fanTokenFilter.ml"
                "common/fanUtil.ml" "common/fan_warnings.ml"
                "common/fcset.ml" "common/fdir.ml"
                "common/foptions.ml" "common/lex_util.ml"
                "common/lexgen.ml" "common/libUtil.ml"
                "common/location_util.ml" "common/parsetreeHelper.ml"
                 "common/tokenEval.ml"
                "common/translate_lex.ml" "common/xStream.ml"
                "common/automata_def.mli" "common/tag_regexp.mli"

                "treeparser/gaction.ml" "treeparser/gcomb.ml"
                "treeparser/gdelete.ml" "treeparser/gfailed.ml"
                "treeparser/ginsert.ml" "treeparser/gparser.ml"
                "treeparser/gprint.ml" "treeparser/gstru.ml"
                "treeparser/gstructure.ml" "treeparser/gtools.ml"

                "cold/ant.ml" "cold/antN.ml"
                "cold/astFilters.ml" "cold/astInjection.ml"
                "cold/astLib.ml" "cold/astLibN.ml"
                "cold/astMacros.ml" "cold/astParsers.ml"
                "cold/astQuotation.ml" "cold/basicN.ml"
                "cold/codeTemplate.ml" 
                "cold/compile_lex.ml" "cold/compile_stream.ml"
                "cold/ctypN.ml" "cold/deriveN.ml"
                "cold/dynLoader.ml" "cold/epN.ml"
                "cold/expN.ml" "cold/fAstN.ml"
                "cold/fCMacroGen.ml" "cold/fControl.ml"
                "cold/fDyn.ml" 
                "cold/fGramDef.ml"
                "cold/fGramGen.ml"
                "cold/fIncludeDir.ml"
                "cold/fMeta.ml"
                "cold/fQuotDir.ml"
                "cold/fSigUtil.ml"
                "cold/fState.ml"
                "cold/fan.ml"
                "cold/fanAstN.ml"
                "cold/fanOps.ml"
                "cold/fan_lex.ml" 
                "cold/fgram.ml"
                "cold/filters.ml"
                "cold/flex_lib.ml"
                "cold/freeVars.ml"
                "cold/fsyntax.ml"
                "cold/gentry.ml"
                "cold/gfold.ml"
                "cold/gramlib.ml"
                "cold/idN.ml"
                "cold/langFans.ml"
                "cold/langInclude.ml"
                "cold/langOcaml.ml"
                "cold/langSave.ml"
                "cold/mkFan.ml"
                "cold/mktop.ml"
                "cold/objs.ml"
                "cold/objsN.ml"
                "cold/parse_fan.ml"
                "cold/parse_grammar.ml"
                "cold/parse_lex.ml"
                "cold/parse_stream.ml"
                "cold/pluginsN.ml" "cold/preCast.ml"
                "cold/stdFan.ml" 
                "cold/typehook.ml"

            ]
    requires = ["ocamlcommon" "dynlink"]
end
